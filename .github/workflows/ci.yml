name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies and run tests
        run: |
          for dir in packages/coldstart-monitor lambdas/* infrastructure; do
            echo "---- $dir ----"
            cd "$dir"
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            npm test
            cd -
          done
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
      - name: Deploy CDK stack
        run: |
          cd infrastructure
          npm run deploy -- -c envName=prod --require-approval never
      - name: Load configuration from SSM
        id: ssm
        run: |
          echo "API_URL=$(aws ssm get-parameter --name '/prod/api/url' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "USER_POOL_ID=$(aws ssm get-parameter --name '/prod/cognito/userPoolId' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "USER_POOL_CLIENT_ID=$(aws ssm get-parameter --name '/prod/cognito/userPoolClientId' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "IDENTITY_POOL_ID=$(aws ssm get-parameter --name '/prod/cognito/identityPoolId' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build
